---
title: Meta-analysis of composite outcomes in clinical trials 
author:
  - name: Athira Mohan
  - name: Brendan Woods
    affil: 1
affiliation:
  - num: 1
    address: School of Mathematical and Statistical Sciences, University of Galway
logoleft_name: https&#58;//sport.universityofgalway.ie/assets/img/logo2.png

poster_height: "594mm"
poster_width: "841mm"
column_numbers: 5
column_margins: "0.5in"	
primary_colour:	"#a80050"	# Secondary colour use for poster design.
secondary_colour:	"#84003d"	# Main colour used for poster design.
accent_colour:	"#e6007e"	# A third colour option.
author_textcol: "white"
title_textsize: "80pt"
author_textsize: "60pt"
body_textsize: "25pt"
output: 
  posterdown::posterdown_html:
    self_contained: true
    pandoc_args: --mathjax
    number_sections: false
knit: pagedown::chrome_print
---

```{css, echo=FALSE}
div.logo_left{
  width: 20%;
}
div.poster_title{
  width: 80%;
}
.section h4 {
    break-after: column;
}
div.footnotes {
    font-size: 18pt;
}
```

<!-- Don't change anything above, except the title and author names, unless you know what you are doing. -->

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      warning = FALSE,
                      tidy = FALSE,
                      message = FALSE,
                      fig.align = 'center',
                      out.width = "100%")
options(knitr.table.format = "html") 
# Load any additional libraries here
library(tidyverse)
library(plotly)
library(kableExtra)
library(posterdown)
library(ggplot2)
tmpDat <- read.csv("/Users/athiramohan/Documents/data.csv")
tmpDat$binary_insulin<-0
tmpDat$binary_insulin[tmpDat$InsulinYN == "Yes"]<-1


thesis.df<-tmpDat

insulin_t_value<-t.test(tmpDat$binary_insulin[tmpDat$Group == "Metformin"], tmpDat$binary_insulin[tmpDat$Group == "Placebo"])$statistic
gw32_t_value<-t.test(tmpDat$gw32[tmpDat$Group == "Metformin"], tmpDat$gw32[tmpDat$Group == "Placebo"])$statistic
gw38_t_value<-t.test(tmpDat$gw38[tmpDat$Group == "Metformin"], tmpDat$gw38[tmpDat$Group == "Placebo"])$statistic
study_squared_composite<-(insulin_t_value^2)+(gw32_t_value^2)+(gw38_t_value^2)

```

# Background and Problem
This  is based on data from the EMERGE trial [^1], a randomized clinical study designed to assess the impact of early initiation of metformin therapy on the development of gestational diabetes mellitus (GDM). The primary endpoint of the EMERGE trial was a composite outcome derived from three criteria: blood glucose levels of at least 5.1 mmol/L at gestational week 32 or 38, or the initiation of insulin therapy.

# Objectives
1.	Assess the potential of meta-analysis to enhance statistical power in composite endpoints with both continuous and binary components.

2.	To compare different methodologies for constructing the composite test statistic utilized in meta-analysis and assess their relative statistical power.

3.	To examine the efficacy of the proposed permutation-based meta-analysis approach relative to alternative methods for analyzing composite endpoints.

# EMERGE Data: Primary Outcome & Key Findings
***Insulin~Yes~ OR gw32≥5.1~Yes~ OR gw38≥5.1~Yes~ ***
At 32 and 38 weeks, the composite outcome incidence was 154/264 (metformin) vs. 82/262 (placebo), with a risk difference of -6.9% (95% CI, -15.1% to 1.4%) and relative risk of 0.89 (95% CI, 0.78 to 1.02).

Although results were statistically insignificant, dichotomization of blood glucose likely reduced power,highlighting the need for alternative statistical approaches.

```{r}

composite_metformin <- round(sum(tmpDat$compositeYN[tmpDat$Group == "Metformin"] == "Yes", na.rm = TRUE) /
                               sum(!is.na(tmpDat$compositeYN[tmpDat$Group == "Metformin"])) * 100, 2)
composite_placebo <- round(sum(tmpDat$compositeYN[tmpDat$Group == "Placebo"] == "Yes", na.rm = TRUE) /
                             sum(!is.na(tmpDat$compositeYN[tmpDat$Group == "Placebo"])) * 100, 2)
EMERGE_composite_p_value<-round(prop.test(x = c(sum(tmpDat$compositeYN[tmpDat$Group == "Metformin"] == "Yes", na.rm = T),
                                                sum(tmpDat$compositeYN[tmpDat$Group== "Placebo"]== "Yes", na.rm = T)),
                                          n = c(sum(!is.na(tmpDat$compositeYN[tmpDat$Group == "Metformin"])), sum(!is.na(tmpDat$compositeYN[tmpDat$Group == "Placebo"])))
)$p.value, 2)
EMERGE_background_stats<-c("Metformin" = composite_metformin, "Placebo" = composite_placebo,
                           "P-value" = EMERGE_composite_p_value)

EMERGE_background_stats <- data.frame(t(as.matrix(EMERGE_background_stats)))
knitr::kable(EMERGE_background_stats, caption = 'EMERGE *p*-values', align = 'c', format = "html") %>%
  kable_styling(font_size = 20) %>%
  add_header_above(c("Primary Composite Outcome N/total (%)" = 2, " " = 1))
```
# Seperate analysis of key componets of the composite 

  
  

[^1]: Dunne *et al,* 2023 doi:10.1001/jama.2023.19869


<!-- This #### below causes the columns to break -->

<!-- You can change where you put these breaks, and the "column_numbers: 4" argument in the YAMLS header to change the layout of the poster, with care! -->


```{r standard-plot, out.width='80%', fig.align='center', fig.height=4}
# Load the necessary libraries
library(ggplot2)
library(hrbrthemes)
library(readr)
library(dplyr)
library(reshape2)

# Create a binary column for Insulin
tmpDat$binary_insulin <- 0
tmpDat$binary_insulin[tmpDat$InsulinYN == "Yes"] <- 1

# Proportion test for Insulin usage between groups
StudyInsulinTest <- prop.test(
  x = c(
    sum(tmpDat$InsulinYN[tmpDat$Group == "Metformin"] == "Yes", na.rm = TRUE),
    sum(tmpDat$InsulinYN[tmpDat$Group == "Placebo"] == "Yes", na.rm = TRUE)
  ),
  n = c(
    sum(tmpDat$Group == "Metformin"),
    sum(tmpDat$Group == "Placebo")
  )
)

# Perform t-tests for binary_insulin, gw32, and gw38
insulin_t <- t.test(tmpDat$binary_insulin ~ tmpDat$Group)
gw32_t <- t.test(tmpDat$gw32 ~ tmpDat$Group)
gw38_t <- t.test(tmpDat$gw38 ~ tmpDat$Group)

# Calculate composite scores
y_squared_composite <- (insulin_t$statistic^2) + (gw32_t$statistic^2) + (gw38_t$statistic^2)
study_non_squared_composite <- insulin_t$statistic + gw32_t$statistic + gw38_t$statistic

# Visualization: Proportion of Insulin Usage by Group
ggplot(tmpDat, aes(x = Group, fill = InsulinYN)) +
  geom_bar(position = "fill") +
  labs(
    title = "Proportion of Insulin Usage by Group",
    y = "Proportion",
    x = "Group"
  ) +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal(base_size = 20) # Increase text size
# This graph shows the proportion of insulin usage in each group.

# Visualization: Boxplots for gw32 and gw38 with cutoff line at 5.1 and p-values
ggplot(tmpDat, aes(x = Group, y = gw32, fill = Group)) +
  geom_boxplot() +
  geom_hline(yintercept = 5.1, linetype = "dashed", color = "red") +
  annotate("text", x = 1.5, y = max(tmpDat$gw32, na.rm = TRUE), 
           label = paste("p-value:", round(gw32_t$p.value, 4)), 
           color = "blue", size = 8) +
  labs(
    title = "Gestational Week 32 by Group",
    y = "Week 32",
    x = "Group",
    caption = "Dashed red line represents the cutoff at 5.1"
  ) +
  theme_minimal(base_size = 20) # Increase text size
# This boxplot compares gestational week 32 measurements across groups.


ggplot(tmpDat, aes(x = Group, y = gw38, fill = Group)) +
  geom_boxplot() +
  geom_hline(yintercept = 5.1, linetype = "dashed", color = "red") +
  annotate("text", x = 1.5, y = max(tmpDat$gw38, na.rm = TRUE), 
           label = paste("p-value:", round(gw38_t$p.value, 4)), 
           color = "blue", size = 8) +
  labs(
    title = "Gestational Week 38 by Group",
    y = "Week 38",
    x = "Group",
    caption = "Dashed red line represents the cutoff at 5.1"
  ) +
  theme_minimal(base_size = 20) # Increase text size
# This boxplot compares gestational week 38 measurements across groups.

# Calculate and display correlation matrix
correlation_vars <- tmpDat %>%
  select(gw32, gw38, binary_insulin) 
correlation_matrix <- cor(correlation_vars, use = "complete.obs", method = "pearson")

# Plot correlation matrix as a heatmap
correlation_melted <- melt(correlation_matrix)

ggplot(correlation_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 2)), color = "white", size = 8) +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  labs(
    title = "Correlation Matrix (Pearson)",
    x = "Variables",
    y = "Variables"
  ) +
  theme_minimal(base_size = 20) # Increase text size
# This heatmap visualizes the Pearson correlation between selected variables.

```

# Methodology

The meta-analysis of the EMERGE outcomes used permutation tests, which generate a null distribution by randomly shuffling the treatment group assignment of participants, while maintaining the outcome variables association with each other. This breaks any true relationship between treatment and outcomes. Statistical significance is assessed by comparing the actual test statistic to the null distribution from these shuffled datasets. The P-value is calculated as the proportion of the null distribution that is more extreme than the observed test statistic. The composite test statistic is obtained by summing the squared T-values comparing glucose at weeks 32 and 38, and Insulin: ***T~32~^2^ + T~38~^2^ + T~I~^2^ ***

The power of the permutation test is estimated using sampling with replacement. Participants are randomly resampled from the original data, allowing duplicates, while maintaining equal numbers from both treatment groups. The test is repeated multiple times, and power is determined by the proportion of resampled subsets yielding test statistics more extreme than the 5% significance threshold.


# Early Results 
```{r morefigs, out.width='90%', echo=FALSE, fig.cap='Permuted Null Distribution of Composite. Test statistic 28.89, *p*-value of *p*<0.001', fig.height=4.5}
continuous_permutation_function<-function(x){
  permutation_t_value<-numeric(10000)
  i <-1
  repeat{
    thesis.df$Group<-sample(thesis.df$Group, 535, replace = F)
    permutation_result<-t.test(x[thesis.df$Group == "Metformin"], x[thesis.df$Group == "Placebo"])
    permutation_t_value[i]<-permutation_result$statistic
    i<- i +1
    if(i > 10000) break}
  return(permutation_t_value)
}
squared_composite<-((continuous_permutation_function(thesis.df$binary_insulin))^2) +
  ((continuous_permutation_function(thesis.df$gw32))^2) +
  ((continuous_permutation_function(thesis.df$gw38))^2)
percentile_95<-quantile(squared_composite, 0.95)

squared_composite.df<-data.frame(squared_composite)
ggplot(squared_composite.df, aes(x= squared_composite))+
  geom_histogram(bins = 200, fill = "mediumseagreen", color = "mediumseagreen")+
  scale_x_continuous(limits = c(0, 30)) +
  labs(x = "Squared Composite", y = "Frequency", title = expression(bold("Permuted Null Distribution"))) +
  geom_vline(xintercept = percentile_95, color = "maroon", linetype = "dashed", size = 1)+
  annotate("text", x = percentile_95, y = 200, label = "95th Percentile", color = "maroon", angle = 90, vjust = -0.5, size = 7)+
  theme_minimal()+
  theme(axis.title = element_text( size = 24),
        axis.text = element_text(size = 18),
        plot.title = element_text(size = 28))+
  geom_vline( xintercept = study_squared_composite, color = "gold3", size = 1 )+
  annotate("text", x = study_squared_composite, y = 200, label = "EMERGE Composite", color = "gold3", angle = 90, vjust = -0.5, size = 7)


```



```{r morefigs2, out.width='95%', echo=FALSE, fig.cap='Power of Permutation Test', fig.height=4.5}

power_n_30<-0.219598
power_n_40<-0.264418
power_n_50<-0.314862
power_n_60<-0.367066
power_n_70<-0.418002
power_n_80<-0.468156
power_n_90<-0.51759
power_n_100<-0.56405
power_n_110<-0.607478
power_n_120<-0.648076
power_n_130<-0.685648
power_n_140<-0.723104
power_n_150<-0.754432
power_n_160<-0.781646
power_n_170<-0.809294
power_n_180<-0.834104
power_n_190<-0.854704
power_n_200<-0.87419
power_n_210<-0.890702
power_n_220<-0.905218
power_n_230<-0.918456
power_n_240<-0.92976
power_n_250<-0.939556
power_n_260<-0.948088
power_results<-c(power_n_30, power_n_40, power_n_50, power_n_60, power_n_70, power_n_80, power_n_90,
                 power_n_100, power_n_110, power_n_120, power_n_130, power_n_140, power_n_150, power_n_160,
                 power_n_170, power_n_180, power_n_190, power_n_200, power_n_210, power_n_220, power_n_230,
                 power_n_240, power_n_250, power_n_260)

EMERGE_power_n_30<-0.02331
EMERGE_power_n_40<-0.03202
EMERGE_power_n_50<-0.05006
EMERGE_power_n_60<-0.049188
EMERGE_power_n_70<-0.056814
EMERGE_power_n_80<-0.06352
EMERGE_power_n_90<-0.06244
EMERGE_power_n_100<-0.07752
EMERGE_power_n_110<-0.07844
EMERGE_power_n_120<-0.08728
EMERGE_power_n_130<-0.09256
EMERGE_power_n_140<-0.09306
EMERGE_power_n_150<-0.11259
EMERGE_power_n_160<-0.10677
EMERGE_power_n_170<-0.11652
EMERGE_power_n_180<-0.12682
EMERGE_power_n_190<-0.12433
EMERGE_power_n_200<-0.13877
EMERGE_power_n_210<-0.14522
EMERGE_power_n_220<-0.14281
EMERGE_power_n_230<-0.1552
EMERGE_power_n_240<-0.16422
EMERGE_power_n_250<-0.16039
EMERGE_power_n_260<-0.17103

EMERGE_power_results<-c(EMERGE_power_n_30, EMERGE_power_n_40, EMERGE_power_n_50, EMERGE_power_n_60,
                        EMERGE_power_n_70, EMERGE_power_n_80, EMERGE_power_n_90, EMERGE_power_n_100,
                        EMERGE_power_n_110, EMERGE_power_n_120, EMERGE_power_n_130, EMERGE_power_n_140,
                        EMERGE_power_n_150, EMERGE_power_n_160, EMERGE_power_n_170, EMERGE_power_n_180,
                        EMERGE_power_n_190, EMERGE_power_n_200, EMERGE_power_n_210, EMERGE_power_n_220,
                        EMERGE_power_n_230, EMERGE_power_n_240, EMERGE_power_n_250, EMERGE_power_n_260)
sample_size<-c(30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210,
               220, 230, 240, 250, 260)

power_graph.df<-data.frame(sample_size, power_results, EMERGE_power_results)

ggplot(power_graph.df, aes(x = sample_size)) +
  geom_line(aes(y = power_results, color = "Permutation Test Method"), size = 1.5, alpha = 0.9, linetype = 1) +
  geom_line(aes(y = EMERGE_power_results, color = "EMERGE Composite   "), size = 1.5, alpha = 0.9, linetype = 1) +
  labs(title = expression(bold("Power Comparison")), x = "Sample Size", y = "Power") +
  scale_x_continuous(limits = c(30, NA), expand = c(0, 0)) +
  scale_y_continuous(limits = c(0, 1)) +
  theme_bw()+
  theme(
    axis.title = element_text(size = 24),
    axis.text = element_text(size = 18),
    plot.title = element_text(size = 28),
    legend.title = element_blank(),
    legend.text = element_text(size = 18),
    legend.position = "bottom")+
  scale_color_manual(
    name = "Legend", 
    values = c("Permutation Test Method" = "mediumseagreen", "EMERGE Composite   " = "steelblue")
  )


```



# Next Project Steps

The next steps in our project are to:

* Compare the permutation test method with the approach Mc Menamin *et al.*, [^2] used to analyze composite outputs.
* Compare different methods of creating the composite test statistic and their influence on power.
* Derive a theoretical null distribution for the composite test statistic incorporating the correlation between the variables.


[^2]: Mc Menamin *et al,* 2018 doi:https://doi.org/10.1186/s13023-018-0819-1


# GitHub

Our code and datasets can be found here: <https://github.com/Brendan-G-Woods/Thesis>



# References
